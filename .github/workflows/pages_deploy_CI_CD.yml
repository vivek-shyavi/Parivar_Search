name: Deploy Flask App with ngrok (Windows)

on:
  push:
    branches:
      - main  # Runs when code is pushed to main

jobs:
  deploy:
    runs-on: self-hosted  # Uses a self-hosted runner (Windows)

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v3

      - name: üêç Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üì¶ Install Dependencies
        run: |
          python -m venv venv
          venv\Scripts\activate
          python.exe -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r backend/requirements.txt
        shell: powershell

      - name: üì¶ Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: üì¶ Install Node.js & npm Dependencies
        run: |
          npm install
          npm run build  # Build frontend
        shell: powershell

      - name: üöÄ Start Flask App
        run: |
          venv\Scripts\activate
          Start-Process -NoNewWindow -FilePath "python" -ArgumentList "backend/app.py"
          Start-Sleep -s 10
        shell: powershell
        env:
          FLASK_ENV: production

      - name: üî• Start Frontend (Vite on Port 5173)
        run: |
          Start-Process -NoNewWindow -FilePath "npm" -ArgumentList "run dev"
          Start-Sleep -s 10
        shell: powershell

      - name: üåç Install ngrok
        run: |
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Expand-Archive -Force ngrok.zip -DestinationPath .
          .\ngrok.exe config add-authtoken 2tU3frY659G3mYbdEBWdcRoypPT_34GtcPGRig8fxB9fj7ngU
        shell: powershell

      - name: üîÑ Start ngrok
        run: |
          Start-Process -NoNewWindow -FilePath ".\ngrok.exe" -ArgumentList "http 5173"
          Start-Sleep -s 10
        shell: powershell

      - name: üîç Debug ngrok tunnel
        run: Invoke-RestMethod http://127.0.0.1:4040/api/tunnels | ConvertTo-Json -Depth 3
        shell: powershell

      - name: üîó Get Ngrok URL for Port 5173
        run: |
          $ngrokUrl = (Invoke-RestMethod http://127.0.0.1:4040/api/tunnels).tunnels | Where-Object { $_.config.addr -eq "http://localhost:5173" } | Select-Object -ExpandProperty public_url
          echo "URL=$ngrokUrl" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: powershell

      - name: Print the Public URL
        run: echo "Ngrok URL is $env:URL"
        shell: powershell

      - name: ‚úÖ Test API Endpoint by PORT
        run: Invoke-WebRequest -Uri "http://localhost:5173" -UseBasicParsing
        shell: powershell

      - name: ‚úÖ Test API Endpoint by Ngrok URL
        run: Invoke-WebRequest -Uri "$env:URL" -UseBasicParsing
        shell: powershell

      - name: üõë Keep Job Running
        run: Start-Sleep -s 999999
        shell: powershell
