name: Deploy Flask App with ngrok

on:
  push:
    branches:
      - main  # Runs when code is pushed to main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Runs on GitHub-hosted Ubuntu machine

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🐍 Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r backend/requirements.txt

      - name: 🚀 Start Flask App
        run: |
          source venv/bin/activate
          python backend/app.py &
        env:
          FLASK_ENV: production  # Set Flask environment variable

      - name: 🌍 Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok
          ngrok config add-authtoken 2tU3frY659G3mYbdEBWdcRoypPT_34GtcPGRig8fxB9fj7ngU

      - name: 🔄 Start ngrok
        run: |
          ngrok http 5000 > /dev/null &
          sleep 5  # Wait for ngrok to start

      - name: 🔗 Get ngrok URL
        id: ngrok_url
        run: |
          echo "::set-output name=url::$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')"

      - name: ✅ Test API Endpoint
        run: |
          curl -X GET "${{ steps.ngrok_url.outputs.url }}/api/health"
